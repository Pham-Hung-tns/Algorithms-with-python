{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNHGl4B62ms9KmsosWUTDl9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["START.\n","PROGRAM \"Cac so ban hoan hao < 1000\".\n","INITIALIZE (lists and variables):\n","  Create three empty lists: tick[], result[], list_divisors[].\n","  Create variable s.\n","  INPUT into s.\n","\n","GET (add value for each variable of list):\n","  FOR i=1 through s:\n","    IF s divisible i:\n","      Add value i in list_divisors[].\n","  FOR 0 through s+1\n","    Add value 0 in tick[] and result[].\n","  tick[0]=1\n","\n","CALCULATE (Mark variables as computable from the values of list_divisor list =1)\n","  FOR i=0 through dem (step=1):\n","    FOR j=s through 0 (step=-1):\n","      IF value's tick[j] is 0 and value's tick[j-a[i]] is 1\n","        tick[j] = 1 # can calculated by variables in list_divisors[]\n","        assign result[j] = j - list_divisors[i]\n","\n","DISPLAY (calculate s by variables in list_divisors[]):\n","  Assign the value of variable s to i\n","  IF there is no way to calculate value's s\n","    PRINT -1\n","  ELSE\n","    WHILE i>0\n","      PRINT i - result[i]\n","      Assign i = result[i]\n","END \n"],"metadata":{"id":"Y4otdWwQVZQS"}},{"cell_type":"code","source":["# giai theo cach rut gon\n","def kiemtra(n):\n","  for i in range(1,n,1):\n","    if n % i == 0:\n","      list_divisors.append(i)\n","  return list_divisors\n","for i in range(2,1000,1):\n","  list_divisors = [] #list that hold divisers of i\n","  kiemtra(i)\n","  tam = i - 1 # assign i-1 to tam, remove value 1 out list_divisors\n","  for j in range(len(list_divisors)-1,1,-1):\n","    if tam > list_divisors[j] and tam -list_divisors[j]>0:\n","      tam = tam - list_divisors[j]\n","      list_divisors.pop(j) # xoa phan tu da chon khoi list_divisors\n","      if tam in list_divisors: # chung minh rang co cach tinh cho so i, in ra i\n","        print(i)\n","    if  j == 0 and tam > 0: # duyet toi cuoi mang nhung van khong tim cach tinh cho so i => i khong co cach tinh, thoat\n","      break\n","\n","      \n"],"metadata":{"id":"zUAvx0vX5JsR"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HGAjUIKSQOuG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661532150762,"user_tz":-420,"elapsed":4823,"user":{"displayName":"Hùng Phạm","userId":"15960697575031148019"}},"outputId":"ac018466-2dcc-4b5f-9e98-e2904fd11aae"},"outputs":[{"output_type":"stream","name":"stdout","text":["nhap gia tri can kiem tra: 64\n","-1\n"]}],"source":["# #so ban hoan hao\n","# # giai theo quy hoach dong\n","# # Initialize\n","# list_divisors = []  # list lưu lại các ước của số cần kiểm tra.\n","# tick = []           # list đánh dấu những số có thể tạo thành từ các giá trị trong list_divisors: 1 nếu có thể tính toán, ngược lại với 0.\n","# result = []         # list lưu lại các giá trị trong tính toán.\n","# s = int(input(\"nhap gia tri can kiem tra: \"))\n","\n","# # khởi tạo list_divisors với các ước số của s (<s)\n","\n","# for i in range(1,s,1):\n","#   if s%i == 0: \n","#     list_divisors.append(i)\n","\n","# # Get:\n","# for i in range(0,s+1,1):\n","#   # khởi tạo 2 list tick và result với các giá trị 0\n","#   tick = tick + [0]\n","#   result = result + [0]\n","# tick[0] = 1\n","\n","# # Calculate\n","\n","# for i in range(0,len(list_divisors)):\n","#     for j in range(s,0,-1):\n","#       if tick[j] == 0 and tick[j-list_divisors[i]] == 1: # nếu giá trị ở tick[j] chưa được đánh dấu(chưa có cách tính toán cho j) và giá trị ở tick[j-list_divisors[i]] đã được đánh dấu\n","#           tick[j] = 1 # cập nhật lại tick[j] =1\n","#           result[j] = j-list_divisors[i] # cập nhật lại result[j] = j -list_divisors[i]\n","\n","#     # Display result\n","# i = s\n","# if tick[s] != 1: # nếu tick[s] vẫn chưa được đánh dấu(!=1) => không có cách tính cho giá trị s, in ra -1\n","#   print(-1)\n","# else:\n","#       #  in ra cách tính cho s\n","#   while i > 0:\n","#     print(i-result[i],end=\" \") \n","#     i = result[i]"]}]}